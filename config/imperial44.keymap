#include "keys_ru.h"
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>

&lt { quick-tap-ms = <200>; };

&mt { quick-tap-ms = <200>; };

/ {
    keymap {
        compatible = "zmk,keymap";

        base {
            bindings = <
&mt LEFT_WIN RIGHT_BRACKET  &kp Q  &kp W  &kp E  &kp R      &kp T                                           &kp Y                      &kp U         &kp I      &kp O    &kp P     &kp LEFT_BRACKET
&kp GRAVE                   &kp A  &kp S  &kp D  &kp F      &kp G                                           &kp H                      &kp J         &kp K      &kp L    &kp SEMI  &kp SINGLE_QUOTE
&kp MINUS                   &kp Z  &kp X  &kp C  &kp V      &kp B                 &trans         &trans     &kp N                      &kp M         &kp COMMA  &kp DOT  &kp FSLH  &kp RSHFT
                                                 &lt 1 TAB  &mt LEFT_SHIFT SPACE  &lt 2 ENTER    &lt 2 ESC  &mt RIGHT_SHIFT BACKSPACE  &lt 1 DELETE
            >;

            display-name = "Base";
            sensor-bindings =
                <&inc_dec_kp C_VOL_UP C_VOL_DN>,
                <&inc_dec_kp PG_UP PG_DN>;
        };

        nav {
            bindings = <
&mt LEFT_GUI LA(LS(C))   &kp LA(LS(N1))  &kp LS(LA(N2))  &kp LS(LA(N3))  &kp LS(LA(N4))  &kp LA(E)                    &kp LS(LC(LEFT_ARROW))  &kp LS(LEFT_ARROW)  &kp LS(RIGHT_ARROW)  &kp LS(LC(RIGHT_ARROW))  &kp PAGE_UP    &kp PRINTSCREEN
&mt LCTRL LS(LA(SPACE))  &kp LA(N1)      &kp LA(N2)      &kp LA(N3)      &kp LA(N4)      &kp LA(W)                    &kp LEFT                &kp DOWN            &kp UP               &kp RIGHT                &kp PAGE_DOWN  &kp F12
&kp LALT                 &kp F1          &kp F2          &kp F3          &kp F4          &kp F5     &trans    &trans  &kp F6                  &kp F7              &kp F8               &kp F9                   &kp F10        &kp F11
                                                                         &trans          &trans     &trans    &trans  &trans                  &trans
            >;

            display-name = "Navigation";
        };

        sym {
            bindings = <
&kp RIGHT_PARENTHESIS  &kp CARET  &kp AT        &kp DOLLAR       &kp RIGHT_BRACKET  &kp PRCNT                    &kp AMPS   &kp LBKT              &kp ASTERISK    &kp QUESTION  &kp DOLLAR  &kp LEFT_PARENTHESIS
&mt LCTRL PLUS         &kp EXCL   &kp HASH      &kp RIGHT_BRACE  &kp RPAR           &kp EQUAL                    &kp COLON  &kp LEFT_PARENTHESIS  &kp LEFT_BRACE  &kp SLASH     &kp PIPE    &mt RCTRL MINUS
&mt LEFT_ALT EQUAL     &kp N1     &kp NUMBER_2  &kp N3           &kp N4             &kp N5     &trans    &trans  &kp N6     &kp N7                &kp N8          &kp N9        &kp N0      &kp RALT
                                                                 &trans             &trans     &trans    &trans  &trans     &trans
            >;

            display-name = "Symbols";
        };

        adj {
            bindings = <
&bootloader  &trans  &kp F1  &kp F2   &kp F3   &kp F4                     &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2      &bt BT_SEL 3  &bt BT_SEL 4  &bt BT_CLR
&trans       &trans  &kp F5  &kp F6   &kp F7   &kp F8                     &out OUT_BLE  &kp C_VOL_DN  &kp K_MUTE        &kp C_VOL_UP  &trans        &studio_unlock
&trans       &trans  &kp F9  &kp F10  &kp F11  &kp F12  &trans    &trans  &out OUT_USB  &kp K_PREV    &kp K_PLAY_PAUSE  &kp K_NEXT    &trans        &trans
                                      &trans   &trans   &trans    &trans  &trans        &trans
            >;

            display-name = "Adjust";
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        first-and-second {
            if-layers = <1 2>;
            then-layer = <3>;
        };
    };
};
